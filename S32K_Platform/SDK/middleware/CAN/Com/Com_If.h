/*!Warning!:Please don't modify this file,this is generated by tools!*/
/********************************************************************
File name: Com_If.h
Author: Stephen Du
Version: V1.0
Timestamp: 2017-12-29 10:56:31
Description:
Others:
Function List:
1. ....
History: /
1. Date:
Author:
Modification:
2. ...
********************************************************************/
#ifndef _COM_IF_H_
#define _COM_IF_H_

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus
/*===============================================================================*/
/*=========================== START: HEAD FILE INCLUDE ==========================*/
/*===============================================================================*/
#include "ComStack_Types.h"
#include "Com_Cfg.h"

/*===============================================================================*/
/*============================ END: HEAD FILE INCLUDE ===========================*/
/*===============================================================================*/

/*===============================================================================*/
/*=============================== START: TYPE DEFINE ============================*/
/*===============================================================================*/
typedef enum
{
    COM_UNINIT = 0,
    COM_INIT = 1,
    COM_RX_ENABLE = 2,
    COM_TX_ENABLE = 4,
    COM_PERIODIC_ENABLE = 8
} Com_StatusType;

/*===============================================================================*/
/*================================ END: TYPE DEFINE =============================*/
/*===============================================================================*/

/*===============================================================================*/
/*=========================== START: FUNC PROTYPE API ===========================*/
/*===============================================================================*/
/********************** START: PROTOCOL API ***********************/
extern Com_StatusType Com_GetStatus(void);

extern uint32 Com_GetConfigurationId(void);

extern void Com_DisableReceptionDM(PduIdType ComIpduId);
extern void Com_EnableReceptionDM(PduIdType ComIpduId);

extern void Com_DisableReceptionDMByGroup(Com_IpduGroupIdType IpduGroupId);
extern void Com_EnableReceptionDMByGroup(Com_IpduGroupIdType IpduGroupId);

extern void Com_Init(const void *config);
extern void Com_DeInit(void);

extern void Com_IpduGroupStart(Com_IpduGroupIdType IpduGroupId);
extern void Com_IpduGroupStop(Com_IpduGroupIdType IpduGroupId);

extern void Com_PeriodicStart(void);
extern void Com_PeriodicStop(void);

extern void Com_TxStart(void);
extern void Com_TxStop(void);

extern void Com_RxStart(void);
extern void Com_RxStop(void);

extern uint8 Com_SendSignal(Com_SignalIdType SignalId, void *SignalDataPtr);
extern uint8 Com_ReceiveSignal(Com_SignalIdType SignalId, void *SignalDataPtr);

extern uint8 Com_GetIpduData(PduIdType pduId,uint8 *destBuf);
extern uint8 Com_GetIpduDataLen(PduIdType pduId);

extern boolean Com_IsRxBufChanged(PduIdType pduId);
extern uint8 Com_ClearRxBufChangedFlag(PduIdType pduId);

extern void Com_MainFunctionRx(void);
extern void Com_MainFunctionTx(void);
/*********************** END: PROTOCOL API ************************/

/********************** START: GET/SET SIGNAL API ***********************/
/*
*@par Service ID[hex]
*0X0
*@par Signal Handle
*SIG_HND_calibration_state
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_Getcalibration_state(uint8 *value);

/*
*@par Service ID[hex]
*0X1
*@par Signal Handle
*SIG_HND_AVM_cali_time_request
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetAVM_cali_time_request(boolean *value);

/*
*@par Service ID[hex]
*0X2
*@par Signal Handle
*SIG_HND_front_cam_cali_fault
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_Getfront_cam_cali_fault(boolean *value);

/*
*@par Service ID[hex]
*0X3
*@par Signal Handle
*SIG_HND_rear_cam_cali_fault
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_Getrear_cam_cali_fault(boolean *value);

/*
*@par Service ID[hex]
*0X4
*@par Signal Handle
*SIG_HND_lest_cam_cali_fault
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_Getlest_cam_cali_fault(boolean *value);

/*
*@par Service ID[hex]
*0X5
*@par Signal Handle
*SIG_HND_right_cam_cali_fault
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_Getright_cam_cali_fault(boolean *value);

/*
*@par Service ID[hex]
*0X6
*@par Signal Handle
*SIG_HND_steering_angle
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint16.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_Getsteering_angle(uint16 *value);

/*
*@par Service ID[hex]
*0X7
*@par Signal Handle
*SIG_HND_BCM_ReverseGearSwitchStatus
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetBCM_ReverseGearSwitchStatus(boolean *value);

/*
*@par Service ID[hex]
*0X8
*@par Signal Handle
*SIG_HND_AT_ShiftPositionValid
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetAT_ShiftPositionValid(boolean *value);

/*
*@par Service ID[hex]
*0X9
*@par Signal Handle
*SIG_HND_AT_GearShiftPosition
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetAT_GearShiftPosition(uint8 *value);

/*
*@par Service ID[hex]
*0XA
*@par Signal Handle
*SIG_HND_TCU_Gear_Position_Status
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetTCU_Gear_Position_Status(uint8 *value);

/*
*@par Service ID[hex]
*0XB
*@par Signal Handle
*SIG_HND_TCU_Gear_Position_VD
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetTCU_Gear_Position_VD(boolean *value);

/*
*@par Service ID[hex]
*0XC
*@par Signal Handle
*SIG_HND_vehicle_speed
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint16.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_Getvehicle_speed(uint16 *value);

/*
*@par Service ID[hex]
*0XD
*@par Signal Handle
*SIG_HND_ABS_Vehicle_speed_valid
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetABS_Vehicle_speed_valid(boolean *value);

/*
*@par Service ID[hex]
*0XE
*@par Signal Handle
*SIG_HND_BCM_SmallLampSwitchStatus
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetBCM_SmallLampSwitchStatus(boolean *value);

/*
*@par Service ID[hex]
*0XF
*@par Signal Handle
*SIG_HND_BCM_TurnIndicatorLeft
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetBCM_TurnIndicatorLeft(uint8 *value);

/*
*@par Service ID[hex]
*0X10
*@par Signal Handle
*SIG_HND_BCM_TurnIndicatorRight
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetBCM_TurnIndicatorRight(uint8 *value);

/*
*@par Service ID[hex]
*0X11
*@par Signal Handle
*SIG_HND_Handbrakesignal
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetHandbrakesignal(uint8 *value);

/*
*@par Service ID[hex]
*0X12
*@par Signal Handle
*SIG_HND_AcReq
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetAcReq(boolean *value);

/*
*@par Service ID[hex]
*0X13
*@par Signal Handle
*SIG_HND_AcReqValid
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetAcReqValid(boolean *value);

/*
*@par Service ID[hex]
*0X14
*@par Signal Handle
*SIG_HND_RearDefrostReq
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetRearDefrostReq(boolean *value);

/*
*@par Service ID[hex]
*0X15
*@par Signal Handle
*SIG_HND_RearDefrostReqValid
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetRearDefrostReqValid(boolean *value);

/*
*@par Service ID[hex]
*0X16
*@par Signal Handle
*SIG_HND_DisplayActive
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetDisplayActive(boolean *value);

/*
*@par Service ID[hex]
*0X17
*@par Signal Handle
*SIG_HND_AcMaxMode
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetAcMaxMode(boolean *value);

/*
*@par Service ID[hex]
*0X18
*@par Signal Handle
*SIG_HND_SetTemperature
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetSetTemperature(uint8 *value);

/*
*@par Service ID[hex]
*0X19
*@par Signal Handle
*SIG_HND_BlowerSpeedLevel
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetBlowerSpeedLevel(uint8 *value);

/*
*@par Service ID[hex]
*0X1A
*@par Signal Handle
*SIG_HND_AirDistrbuteMode
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetAirDistrbuteMode(uint8 *value);

/*
*@par Service ID[hex]
*0X1B
*@par Signal Handle
*SIG_HND_DefrostMode
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetDefrostMode(boolean *value);

/*
*@par Service ID[hex]
*0X1C
*@par Signal Handle
*SIG_HND_AirLetMode
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetAirLetMode(boolean *value);

/*
*@par Service ID[hex]
*0X1D
*@par Signal Handle
*SIG_HND_AutoMode
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetAutoMode(boolean *value);

/*
*@par Service ID[hex]
*0X1E
*@par Signal Handle
*SIG_HND_OnOffState
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetOnOffState(boolean *value);

/*
*@par Service ID[hex]
*0X1F
*@par Signal Handle
*SIG_HND_RearMode
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetRearMode(boolean *value);

/*
*@par Service ID[hex]
*0X20
*@par Signal Handle
*SIG_HND_main_version
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_Getmain_version(uint8 *value);

/*
*@par Service ID[hex]
*0X21
*@par Signal Handle
*SIG_HND_sub_version
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_Getsub_version(uint8 *value);

/*
*@par Service ID[hex]
*0X22
*@par Signal Handle
*SIG_HND_AVM_activation_state
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_GetAVM_activation_state(boolean *value);

/*
*@par Service ID[hex]
*0X23
*@par Signal Handle
*SIG_HND_display_view_state
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_RxSig_Getdisplay_view_state(uint8 *value);

/*
*@par Service ID[hex]
*0X24
*@par Signal Handle
*SIG_HND_Calibrate_start
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint32.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_Calibrate_start(boolean getOrSet, uint32 *value);

/*
*@par Service ID[hex]
*0X25
*@par Signal Handle
*SIG_HND_cali_info_req
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_cali_info_req(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X26
*@par Signal Handle
*SIG_HND_time_information
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint32.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_time_information(boolean getOrSet, uint32 *value);

/*
*@par Service ID[hex]
*0X27
*@par Signal Handle
*SIG_HND_ExteriorMirrorElecFlod
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_ExteriorMirrorElecFlod(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X28
*@par Signal Handle
*SIG_HND_RR_Beep_Fre
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_RR_Beep_Fre(boolean getOrSet, uint8 *value);

/*
*@par Service ID[hex]
*0X29
*@par Signal Handle
*SIG_HND_ClimateCtlByDvdReq
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_ClimateCtlByDvdReq(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X2A
*@par Signal Handle
*SIG_HND_AcKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_AcKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X2B
*@par Signal Handle
*SIG_HND_MaxAcKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_MaxAcKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X2C
*@par Signal Handle
*SIG_HND_AutoKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_AutoKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X2D
*@par Signal Handle
*SIG_HND_BlowerUpkey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_BlowerUpkey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X2E
*@par Signal Handle
*SIG_HND_BlowerDownKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_BlowerDownKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X2F
*@par Signal Handle
*SIG_HND_SetTempUpKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_SetTempUpKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X30
*@par Signal Handle
*SIG_HND_SetTempDownKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_SetTempDownKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X31
*@par Signal Handle
*SIG_HND_DefrostKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_DefrostKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X32
*@par Signal Handle
*SIG_HND_AirLetKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_AirLetKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X33
*@par Signal Handle
*SIG_HND_AiirDisModeKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_AiirDisModeKey(boolean getOrSet, uint8 *value);

/*
*@par Service ID[hex]
*0X34
*@par Signal Handle
*SIG_HND_RearDefrostKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_RearDefrostKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X35
*@par Signal Handle
*SIG_HND_OffKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_OffKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X36
*@par Signal Handle
*SIG_HND_RearKey
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_RearKey(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X37
*@par Signal Handle
*SIG_HND_active_command
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_active_command(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X38
*@par Signal Handle
*SIG_HND_Language_state
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_Language_state(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X39
*@par Signal Handle
*SIG_HND_screen_state
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_screen_state(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X3A
*@par Signal Handle
*SIG_HND_purpose_key
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_purpose_key(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X3B
*@par Signal Handle
*SIG_HND_operation_ordinate
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is boolean.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_operation_ordinate(boolean getOrSet, boolean *value);

/*
*@par Service ID[hex]
*0X3C
*@par Signal Handle
*SIG_HND_X_ordinate
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint16.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_X_ordinate(boolean getOrSet, uint16 *value);

/*
*@par Service ID[hex]
*0X3D
*@par Signal Handle
*SIG_HND_Y_ordinate
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint16.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_Y_ordinate(boolean getOrSet, uint16 *value);

/*
*@par Service ID[hex]
*0X3E
*@par Signal Handle
*SIG_HND_cross_navi_mode
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint8.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_cross_navi_mode(boolean getOrSet, uint8 *value);

/*
*@par Service ID[hex]
*0X3F
*@par Signal Handle
*SIG_HND_cross_navi_distance
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] getOrSet
*COM_GET_SIG_VALUE: To get signal value,use this MACRO.
*COM_SET_SIG_VALUE: To set signal value,use this MACRO.
*
*@param[inout] value
*Pointer point to signal value buffer.
*The buffer should supplied by user and the type is uint16.
*
*@param[out] None
*
*@retval E_OK: Get or set signal value successed.
*@retval E_NOT_OK: Get or set signal value failed.
*
*Service to get or set signal value.
*/
extern boolean Com_TxSig_cross_navi_distance(boolean getOrSet, uint16 *value);

/*********************** END: GET/SET SIGNAL API ************************/

/*===============================================================================*/
/*============================ END: FUNC PROTYPE API ============================*/
/*===============================================================================*/
#ifdef __cplusplus
}
#endif // __cplusplus

#endif
/*============================= END OF FILE: Com_If.h ==========================*/
