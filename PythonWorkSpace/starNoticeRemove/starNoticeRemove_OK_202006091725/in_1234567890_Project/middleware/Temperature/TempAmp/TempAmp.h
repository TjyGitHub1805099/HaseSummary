/*!Warning!:Please don't modify this file,this is generated by tools!*/
/********************************************************************
File name: TempAmp.h
Author: Stephen Du
Version: V1.0
Timestamp: 2017-01-16 15:55:25
Description:
Others:
Function List:
1. ....
History: /
1. Date:
Author:
Modification:
2. ...
********************************************************************/
#ifndef _TEMPAMP_H_
#define _TEMPAMP_H_

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

#include "Std_Types.h"

#define TEMPAMP_STATE_ULTRALOW (0U)
#define TEMPAMP_STATE_LOW (1U)
#define TEMPAMP_STATE_NORMAL (2U)
#define TEMPAMP_STATE_HIGH (3U)
#define TEMPAMP_STATE_ULTRAHIGH (4U)
#define TEMPAMP_STATE_MAX (5U)

/*
*@par Service ID[hex]
*0X0
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] None
*
*@retval None
*
*Service to initialize the module;
*You must call this function first before you call the others.
*/
void TempAmp_Init(void);

/*
*@par Service ID[hex]
*0X1
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] None
*
*@retval None
*
*Scanf the signal periodically and do the debouncer.
*/
void TempAmp_Scan(void);

/*
*@par Service ID[hex]
*0X2
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] None
*
*@retval TEMPAMP_STATE_ULTRALOW: Amp voltage is ultra low.
*@retval TEMPAMP_STATE_LOW: Amp voltage is low.
*@retval TEMPAMP_STATE_NORMAL: Amp voltage is normal.
*@retval TEMPAMP_STATE_HIGH: Amp voltage is high.
*@retval TEMPAMP_STATE_ULTRAHIGH: Amp voltage is ultra high.
*
*Call this function to register user callback.
*/
uint8 TempAmp_GetStatus(void);

/*
*@par Service ID[hex]
*0X3
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] None
*
*@retval None
*
*Service to get the temperature value;
*/
uint8 TempAmp_GetValue(sint16 *TempValue);

/*
*@par Service ID[hex]
*0X4
*@par Sync/Async
*Synchronous
*@par Reentrancy
*Reentrant
*@param[in] None
*
*@param[inout] None
*
*@param[out] None
*
*@retval None
*
*Service to initialize the module;
*You must call this function first before you call the others.
*/
void TempAmp_Deinit(void);

#ifdef __cplusplus
}
#endif // __cplusplus

#endif