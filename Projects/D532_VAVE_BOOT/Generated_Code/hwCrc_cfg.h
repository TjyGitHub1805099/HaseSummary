/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : hwCrc_cfg.h
**     Project     : D532_MC_USB_SWDL
**     Processor   : S32K148_176
**     Component   : crc
**     Version     : Component SDK_S32K14x_08, Driver 01.00, CPU db: 3.00.000
**     Repository  : SDK_S32K14x_08
**     Compiler    : GNU C Compiler
**     Date/Time   : 2019-02-20, 20:27, # CodeGen: 0
**     Contents    :
**         CRC_DRV_Init             - status_t CRC_DRV_Init(uint32_t instance,const crc_user_config_t *...
**         CRC_DRV_Deinit           - status_t CRC_DRV_Deinit(uint32_t instance);
**         CRC_DRV_WriteData        - void CRC_DRV_WriteData(uint32_t instance,const uint8_t * data,uint32_t...
**         CRC_DRV_GetCrcResult     - uint32_t CRC_DRV_GetCrcResult(uint32_t instance);
**         CRC_DRV_Configure        - status_t CRC_DRV_Configure(uint32_t instance,const crc_user_config_t *...
**         CRC_DRV_GetCrc32         - uint32_t CRC_DRV_GetCrc32(uint32_t instance, uint32_t data, bool newSeed,...
**         CRC_DRV_GetCrc16         - uint32_t CRC_DRV_GetCrc16(uint32_t instance, uint16_t data, bool newSeed,...
**         CRC_DRV_GetCrc8          - uint32_t CRC_DRV_GetCrc8(uint32_t instance, uint8_t data, bool newSeed,...
**         CRC_DRV_GetConfig        - status_t CRC_DRV_GetConfig(uint32_t instance, crc_user_config_t * const...
**         CRC_DRV_GetDefaultConfig - status_t CRC_DRV_GetDefaultConfig(crc_user_config_t * const userConfigPtr);
**
**     Copyright 1997 - 2015 Freescale Semiconductor, Inc.
**     Copyright 2016-2017 NXP
**     All Rights Reserved.
**     
**     THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
**     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
**     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
**     IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
**     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
**     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
**     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
**     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
**     IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
**     THE POSSIBILITY OF SUCH DAMAGE.
** ###################################################################*/
/*!
** @file hwCrc_cfg.h
** @version 01.00
*/
/*!
**  @addtogroup hwCrc_cfg_module hwCrc_cfg module documentation
**  @{
*/
#ifndef hwCrc_cfg_H
#define hwCrc_cfg_H

/* MODULE hwCrc_cfg.
 *
 * @page misra_violations MISRA-C:2012 violations
 *
 * @section [global]
 * Violates MISRA 2012 Advisory Rule 2.5, Global macro not referenced.
 * The global macro will be used in function call of the module.
 */

/* Include inherited beans */
#include "clockManager_cfg.h"
#include "Cpu.h"

/*! @brief Device instance number */
#define INST_HWCRC_CFG (0U)

/*! @brief CRC configuration declaration */
extern const crc_user_config_t hwCrc_cfg_InitConfig0;
extern const crc_user_config_t hwCrc_cfg_InitConfig1;
extern const crc_user_config_t hwCrc_cfg_InitConfig2;

#endif
/* ifndef hwCrc_cfg_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.1 [05.21]
**     for the Freescale S32K series of microcontrollers.
**
** ###################################################################
*/
