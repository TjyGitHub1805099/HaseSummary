/*!Warning!:Please don't modify this file,this is generated by tools!*/
/********************************************************************
File name: Task_IpcApp_Cfg.h
Author: Stephen Du
Version: V1.0
Timestamp: 2017-05-26 17:32:05
Description:
Others:
Function List:
1. ....
History: /
1. Date:
Author:
Modification:
2. ...
********************************************************************/
#ifndef _TASK_IPCAPP_CFG_H_
#define _TASK_IPCAPP_CFG_H_
	
#ifdef __cplusplus
	extern "C" {
#endif // __cplusplus
#include "ipc_app_type.h"	

#ifdef IOC_PLATFORM
#include "Std_Types.h"
#else
#include <stdint.h>
typedef float float32_t;
#endif

#define TASK_IPCAPP_DEBUG_TRACE STD_ON
#define TASK_IPCAPP_STACK_MONITOR STD_OFF

#define IPC_CH_REQ				(2)
#define IPC_CH_NTF				(3)
#define IPC_CH_CAN				(4)
#define IPC_CH_AUDIO			(5)
#define IPC_CH_UPDATE			(6)
#define IPC_CH_DIAG             (7)

#define IPC_APP_EVENT_SIZE		(10U)
#define IPC_APP_EVENT_CH_CAN_SIZE	(30U)

#define IPC_EVENT_DATA_BUF_SIZE	(64)
#define IPC_CAN_TIMEOUT_BUF_SIZE (7) //CAN_RX_IPDU_MAX_NUM is 37

#define IPC_APP_RET_OK			(0U)
#define IPC_APP_RET_FAILED		(1U)

#define TYPE_MSG_WARN			(0U)
#define TYPE_MSG_NORMAL			(1U)

#define IPC_CHAR_BUF_SIZE		(12)

/*********************hardware signal mask********************/
#define HARD_INHIBITOR_SW_N_Range 			(0)		//K-4-1	used for CAN output
#define HARD_INHIBITOR_SW_R_Range			(1)		//K-4-1-C used for CAN output
#define HARD_O_D_OFF_SW						(2)		//K-5-1	used for CAN output
#define HARD_AT_STRG_SHIFT_UP_DOWN_SW		(3)		//K-8-1	used for CAN output
#define HARD_PKB_SW_ForSignalBuffer			(4)		//K-19-1
#define HARD_PKB_SW_ForWarningLamp			(5)		//K-19-2
#define HARD_BRAKE_OIL_SW_ForSignalBuffer	(6)		//K-20-1 used for CAN output
#define HARD_BRAKE_OIL_SW_ForIndicator		(7)		//K-20-2
#define HARD_CHARGE_SIGNAL_ForIdleStop		(8)		//K-21-3
#define HARD_SEAT_BELT_DR_CPU_READ			(9)		//k-22-1
#define HARD_SEAT_BELT_DR_IND_DRIVE			(10)	//k-22-2 refer spec to be found
#define HARD_SEAT_BELT_AS_CPU_READ			(11)	//k-22-3
#define HARD_SECURITY_Signal				(12)	//k-24-1
#define HARD_LOW_WASHER_SW					(13)	//k-25-1 for spec D-38-1(reserved)
#define HARD_ECO_MODE_SW					(14)	//k-64-1 for CAN output
#define HARD_INDIRECT_ILLUM_SEMI_ACTIVE		(15)	//k-65-1 for semi active
#define HARD_IDLE_STOP_SW_OUTPUT			(16)	//k-66-1 for CAN output
#define HARD_LED_HEAD_LAMP_L				(17)	//k-68-1-T
#define HARD_LED_HEAD_LAMP_R				(18)	//k-68-1-T
#define HARD_INDIRECT_ILLUM_CTRL_UNIT		(19)	//k-70-1 refer spec J-4-2
#define HARD_FR_DER_SW_INPUT				(20)	//k-71-1-T refer spec to be found
#define HARD_ChargeConnectDetect			(21)	//k-72-1
#define HARD_Charge_Indicator				(22)	//k-73-1 refer spec D-89-1
#define HARD_E_PKB_StatusOutput				(23)	//k-74-1 refer spec to be found

#if 1//ndef IOC_PLATFORM
#pragma pack(1)
#endif
/*
typedef enum
{
	IPC_BUTTON_NONE = 0,
	IPC_BUTTON_DOWN,
	IPC_BUTTON_OK,
	IPC_BUTTON_UP,
	IPC_BUTTON_BACK,
}IPC_BUTTON_ENUM;*/



typedef struct
{
	uint16_t VehicleSpeedStatus		:2;
	uint16_t VehicleSpeedValue		:14;
	uint16_t EngineSpeedStatus		:2;
	uint16_t EngineSpeedValue		:14;
	uint16_t InsFuelConsDisplayStat	:1;
	uint16_t InsFuelConsDisplayUnit	:1;
	uint16_t InsFuelConsumption		:14;
	uint8_t  CoolantTempStatus		:1;
	uint8_t  CoolantTemp			:7;
	uint8_t  FuelStatus				:1;
	uint8_t  Fuel					:7;
}BASIC_FAST_STRU;

typedef struct
{
	uint16_t AverageFuelConsIndex	:2;
	uint16_t AverageFuelConsStat	:2;
	uint16_t AverageFuelCons		:12;
	uint16_t AverageVehicleSpeedIndex:2;
	uint16_t AverageVehicleSpeedStat:2;
	uint16_t AverageVehicleSpeed	:12;
	uint32_t DriveTimeIndex			:2;
	uint32_t DriveTimeStat			:2;
	uint32_t DriveTime				:28;
	uint16_t AveragePowerIndex		:2;
	uint16_t AveragePowerStat		:2;
	uint16_t AveragePower			:12;
	uint16_t DTE_Status				:2;
	uint16_t DTE					:14;
	uint8_t OutsideAirTempStat		:1;
	uint8_t OutsideAirTemp			:7;
	uint8_t Mode					:2;	//transmission mode 0-MT 1-AT
	uint8_t Up_Down					:2;
	uint8_t Gear					:4;
	uint8_t AccGuideStatus			:1;
	uint8_t AccGuide				:7;
	uint8_t EcoRank;
	uint16_t RemainFuelStatus		:2;
	uint16_t RemainFuelVol			:14;
}BASIC_MIDDLE_STRU;


typedef struct
{
	uint32_t OdometerStatus			:2;
	uint32_t Odometer				:30;
	uint32_t TripAStatus			:2;
	uint32_t TripA					:30;
	uint32_t TripBStatus			:2;
	uint32_t TripB					:30;
	uint32_t Service				:16;
	uint32_t Reserved				:16;
}BASIC_SLOW_STRU;

typedef struct
{
	uint8_t ID;
	uint8_t Status;
}IPC_APP_MSG_STRU;


typedef struct
{
	uint8_t ID;
	uint8_t TelltaleStatus	:3;
	uint8_t LcdStatus		:2;
	uint8_t Acoustic		:3;
}IPC_APP_NORMAL_MSG_STRU;

typedef struct
{
	uint8_t TelltaleStatus	:3;
	uint8_t LcdStatus		:2;
	uint8_t Acoustic		:3;
}IPC_APP_NORMAL_MSG_STAT_STRU;


typedef struct
{
	uint8_t ID;
	uint8_t BitBlinking		:2;
	uint8_t Reserved		:4;
	uint8_t BitStatus		:2;
}IPC_APP_WARN_MSG_STRU;

typedef struct
{
	uint8_t BitBlinking		:2;
	uint8_t Reserved		:4;
	uint8_t BitStatus		:2;
}IPC_APP_WARN_MSG_STAT_STRU;

typedef struct
{
	uint8_t IgnState				:1;	
	uint8_t AccState				:1;	
	uint8_t VoltageMode				:3;
	uint8_t PredriveCheck			:1;
	uint8_t DarkMode				:1;
	uint8_t IdleStopPermition		:1;
	uint8_t CrankingStatus			:1;
	uint8_t VoltageState			:2;	//0:normal 
	uint8_t DimmingControl			:1;
	uint8_t Reserved				:4;
}IPC_APP_SYS_CTRL_STRU;


typedef struct
{
	uint8_t ClockWithoutNavi_Audio	:2;
	uint8_t NAVI_AUDIO				:1;
	uint8_t ITS_BSW					:1;
	uint8_t ITS_LDW					:1;
	uint8_t ITS_FEB					:1;
	uint8_t AT_MT					:1;
	uint8_t IdleStopFunction		:1;
	
	uint8_t E_PKB_And_AVH			:2;
	uint8_t IBA_OFF					:1;
	uint8_t IndirectIllumination	:1;
	uint8_t RearSeat				:1;
	uint8_t TPMSWith				:2;
	uint8_t SLIP					:1;
	
	uint8_t I_Key					:1;
	uint8_t OAT_With				:1;
	uint8_t Sonar					:2;
	uint8_t LED_HeadLamp			:1;
	uint8_t EAPM					:1;
	uint8_t ITS_TJP					:1;
	uint8_t ITS_ICC					:1;

	uint8_t LightSensitivity			:1;
	uint8_t LightOffDay					:1;
	uint8_t AutoFoldFunction			:1;
	uint8_t AutoLockFunctionCustomize	:1;
	uint8_t LockAutoWindowUp			:1;
	uint8_t AutoUnlockFunctionCustomize	:1;
	uint8_t AnswerBack					:1;
	uint8_t RainSensor					:1;
	
	uint8_t WiperWithWipingDrip			:1;
	uint8_t ITS_ACC						:1;
	uint8_t ITS_LKA						:1;
	uint8_t EQ_PIN						:4;
	uint8_t ShiftByWire					:1;
	//uint8_t reserved					:5;
	
}IPC_APP_SEMI_SET_STRU;

typedef struct
{
    uint8_t language : 1;       //[0,1]
    uint8_t unit : 1;           //[0,1] 0:km/h,1:mile/h
    uint8_t tirePressure : 1;   //[0,1]
    uint8_t driveAssistant : 1; //[0,1]
    uint8_t autoStopSingle : 1; //[0,1]
    uint8_t autoStopSum : 1;    //[0,1]
    uint8_t sound : 1;          //[0,1]
    uint8_t powerCycle : 1;     //[0,1]

    uint8_t mapType : 1;             //[0,1](0:2d,1:3d)
    uint8_t playEffect : 1;          //[0,1]
    uint8_t alertSound : 1;          //[0,1]
    uint8_t vehicleDeviateAlert : 1; //[0,1]
    uint8_t blindAreaMonitoring : 1; //[0,1]
    uint8_t emergencyBraking : 1;    //[0,1]
    uint8_t parkAssistant : 1;       //[0,1]
    uint8_t driveTimeAlert : 1;      //[0,1]

    uint16_t driveTimeSet; //[30,360]

    uint16_t maintenanceMileage; //[0,10000](km)
    uint16_t maintenanceTime;    //[0,365]

    uint8_t backLightValue;  //[0,5]
	uint8_t backLightNightValue;  //[0,5]ÒÇ±í±³¹â£¬Ò¹¼ä /* yangxl */
    uint8_t speedLimit;      //[0,24](??10km/h,0:??,24:240km/h)
    uint8_t bestFuelTimeOut; //[0,60](second,ui step:5)

    uint8_t frontTire; //[0,0x0f]
    uint8_t rearTire;  //[0,0x0f]

    uint8_t hmiLastPage; //[0,255]
    uint8_t IlluminationSetting	:4; //[0,7]
    uint8_t TimeFormat			:1; //0:24H 1:12H
    uint8_t NaviMode			:1;	//0:small 1:big
    uint8_t ReservedNavStyle	:1; //
	uint8_t EAPM_Setting		:1;
	
	uint8_t LightSensitivity		:2;
	uint8_t LightOffDay				:3;
	uint8_t SelectiveUnlock			:1;
	uint8_t	WiperWithSpeed			:1;
	uint8_t	CarBodySetInProgress	:1;	//car body setting in progress
	//uint8_t Reserved[4];

	/* yangxl */
	uint8_t AutomaticClosingWindow		        :1; //0: OFF 1: ON
	uint8_t BrushAwayTheRain			        :1; //0: OFF 1: ON
	uint8_t RearviewMirrorFoldsAutomatically	:1; //0: OFF 1: ON
	uint8_t	RearviewMirrorSwitch			    :1;	//0: OFF 1: ON
	uint8_t	AutomaticLocking			      	:1;	//0: OFF 1: ON
	uint8_t	AutomaticUnlock			     		:1;	//0: OFF 1: ON
	uint8_t	IntensityOfLight			        :2;	//0: low 1: midd 2: high 
	
	uint8_t	TurnOffLightsDelay			        :3;	//0: 0s 1: 30s 2: 45s 3: 60s 4: 90s  
	uint8_t	CarLockPrompt			            :1;	//0: OFF 1: ON
	uint8_t	RestoreFactorySettings			    :1;	//0: OFF 1: ON
	uint8_t	RainfallSensitivity			        :2;	//0: low 1: midd 2: high 
	uint8_t	FEBSwitch			     		    :1; //0: OFF 1: ON
	
	uint8_t	LKASwitch			      			:1;	//0: OFF 1: ON
	uint8_t	BSWSwitch			      			:1;	//0: OFF 1: ON
	uint8_t	CTASwitch			     		    :1;	//0: OFF 1: ON
	uint8_t	EAPMSwitch			      			:1;	//0: OFF 1: ON
	uint8_t	DOASwitch			      			:1;	//0: OFF 1: ON
	uint8_t	LDWSwitch			      			:1;	//0: OFF 1: ON
	uint8_t	ECOSwitch			      			:1; //0: OFF 1: ON
	uint8_t	ISSSwitch			      			:1;	//0: OFF 1: ON

	uint8_t	HUDSwitch			      			:1;	//0: OFF 1: ON
	uint8_t HUDNavigationDisplaySwitch		    :1;	//0: OFF 1: ON
	uint8_t	HUDDrivingAssistanceSwitch			:1;	//0: OFF 1: ON
	uint8_t	HUDTachometerSwitch			      	:1;	//0: OFF 1: ON
	uint8_t	HUDFuelConsumptionSwitch			:1;	//0: OFF 1: ON
	uint8_t	HUDMusicStateSwitch			      	:1;	//0: OFF 1: ON
	uint8_t	HUDMixedModeSwitch			      	:1; //0: OFF 1: ON
	uint8_t	HUDCallReminderSwitch			    :1;	//0: OFF 1: ON

	uint8_t	HUDLyricSwitch			      		:1;	//0: OFF 1: ON
	uint8_t Custommenucombinations		        :3;	//0~4
	uint8_t	NavStyle							:4;	//
	
	uint8_t	HUDRotationAngle;

	uint8_t HUDStyle							:2;	//
	uint8_t UPASwitch							:1;	//
	uint8_t ReservedStyle					    :5;	//

	uint8_t Reserved[6];
	/* yangxl */
	
} IPC_APP_SYS_SETTING_STRU;



typedef struct
{
	uint8_t TirePopUpFlag			:2;	//0:No PopUp 1:Show PopUp
	uint8_t DisplayStyle			:4;	//not care
	uint8_t SystemFailure_TPMS		:2; //not care
	uint8_t TransmitterStatusFL		:1; //PressureTyreXX Value Status 1:valid 0:Invalid
	uint8_t TransmitterStatusFR		:1; //PressureTyreXX Value Status 1:valid 0:Invalid
	uint8_t TransmitterStatusRL		:1; //PressureTyreXX Value Status 1:valid 0:Invalid
	uint8_t TransmitterStatusRR		:1; //PressureTyreXX Value Status 1:valid 0:Invalid
	uint8_t FlatTireFR				:1;
	uint8_t FlatTireFL				:1;
	uint8_t FlatTireRR				:1;
	uint8_t FlatTireRL				:1;
	uint8_t LowTirepressureFR		:1; 
	uint8_t LowTirepressureFL		:1;
	uint8_t LowTirepressureRR		:1;
	uint8_t LowTirepressureRL		:1;
	float32_t PressureTyreFL;
	float32_t PressureTyreFR;
	float32_t PressureTyreRL;
	float32_t PressureTyreRR;
    uint8_t frontTire; 				//[0,0x0f]Ç°Ì¥Ñ¹¸æ¾¯ãÐÖµ£¬¶¨Òå¼û±í¸ñ
    uint8_t rearTire;  				//[0,0x0f]ºóÌ¥Ñ¹¸æ¾¯ãÐÖµ£¬¶¨Òå¼û±í¸ñ
}IPC_APP_TPMS_STRU;

typedef struct
{
	uint8_t DetectionDisplayRequest;
	
	uint8_t DetectionRangeStatus_RR_Left;
	uint8_t DetectionRangeStatus_RR_Center;
	uint8_t DetectionRangeStatus_RR_Right;

	uint8_t DetectionRangeStatus_FR_Left;
	uint8_t DetectionRangeStatus_FR_Center;
	uint8_t DetectionRangeStatus_FR_Right;
	
	uint8_t Sensor_Availavility_RR_CornerLeft;
	uint8_t Sensor_Availavility_RR_Center;
	uint8_t Sensor_Availavility_RR_CornerRight;

	uint8_t Sensor_Availavility_FR_CornerLeft;
	uint8_t Sensor_Availavility_FR_Center;
	uint8_t Sensor_Availavility_FR_CornerRight;

	uint8_t Detect_Distance_Status;
	uint8_t StatusDisplayRequestSonerWarning;
}IPC_APP_SONAR_STRU;

typedef struct
{
	uint8_t DriveTime[2];
}IPC_APP_DRIVE_TIME_STRU;

typedef struct
{
	uint8_t IdleStopInfoFlagA;
	uint8_t IdleStopTimeA[3];
	uint32_t IdleStopFuelA;
	uint8_t IdleStopInfoFlagB;
	uint8_t IdleStopTimeB[3];
	uint32_t IdleStopFuelB;
}IPC_APP_IDLE_STOP_INFO_STRU;


typedef struct
{
	uint8_t Format;
	uint8_t Time[6];
}IPC_APP_TIME_INFO_STRU;

#if 0
typedef struct
{
	uint8_t UpButton				:2;
	uint8_t DownButton				:2;
	uint8_t OkButton				:2;
	uint8_t BackButton				:2;
	uint8_t SourceButton			:2;
	uint8_t VoiceRecButton			:2;
	uint8_t VolUpButton				:2;
	uint8_t VolDownButton			:2;
	uint8_t TelButton				:2;
	uint8_t DispButton				:2;
	uint8_t Reserved				:4;
}IPC_APP_BUTTON_STRU;
#else
typedef struct
{
	uint8_t KeyStrgUp				:2;
	uint8_t KeyStrgDown				:2;
	uint8_t KeyStrgLeft				:2;
	uint8_t KeyStrgRight			:2;
	uint8_t KeyStrgOk				:2;
	uint8_t KeyStrgDisp				:2;
	uint8_t KeyStrgTelOn			:2;
	uint8_t KeyStrgDvr				:2;
	uint8_t KeyStrgLka				:2;
//	uint8_t DispButton				:2;
	uint8_t Reserved				:6;
}IPC_APP_BUTTON_STRU;

#endif

typedef struct
{
	uint8_t OutsideAirTempValid;
	float32_t OutsideAirTempValue;
}IPC_APP_OUTSIDE_AIR_TEMP_STRU;

typedef struct
{
	uint8_t HistoryAvgFuelEconomyFlag;
	uint8_t BestAvgFuelFlag	:1;
	uint8_t EcoRankFlag		:1;
	uint8_t EcoRank			:6;
	uint16_t total_afc_value;	
	uint16_t best_afc_value;
	uint16_t LastAF[30];
}IPC_APP_HISTORY_AVG_FUEL_STRU;

typedef struct
{
	uint8_t UnitStatus;	//0:no display 1:display 
	uint8_t CruiseSpeedStatus;	//0:no display ;1:Normal  ;2:blink 2.5Hz  ;3:display"---"
	uint16_t CruiseSpeedValue; //unit:1km/h
}IPC_APP_CRUISE_STRU;


typedef struct
{
	IPC_ADAS_BSW_ENUM BSW_Status;
	IPC_ADAS_LDW_ENUM LDW_Status;
	IPC_ADAS_FEB_ENUM FEB_Status;
}IPC_ADAS_STATUS_STRU;


typedef struct
{
	uint8_t RearSeatStatusLeft;		//0:off 1:on
	uint8_t RearSeatStatusCenter;	//0:off 1:on
	uint8_t RearSeatStatusRight;	//0:off 1:on
}IPC_REAR_SEAT_STATUS_STRU;

typedef struct
{
	uint8_t EngineHoodOpen; 	//0:off 1:on
	uint8_t FrontLeftDoorOpen; 	//0:off 1:on
	uint8_t FrontRightDoorOpen; //0:off 1:on
	uint8_t RearLeftDoorOpen; 	//0:off 1:on
	uint8_t RearRightDoorOpen;	//0:off 1:on
	uint8_t TrunkDoorOpen; 		//0:off 1:on
}IPC_DOOR_STATUS_STRU;

typedef struct
{
	uint16_t ErrorCode0		:2;
	uint16_t ErrorCode1		:2;
	uint16_t ErrorCode2		:2;
	uint16_t ErrorCode3		:2;
	uint16_t ErrorCode4		:2;
	uint16_t ErrorCode5		:2;
	uint16_t ErrorCode6		:2;
	uint16_t ErrorCode7		:2;
	
	uint16_t FuelIgad;
	uint16_t FuelFmad;
	uint16_t FGAUGE;
	uint16_t FuelSensor;	//0.1 ohm
	uint16_t RAFV;
	uint16_t RAFC;
	uint16_t DTE_Values;
}IPC_SELF_DIAG_DYNAMIC_STRU;

typedef struct
{
	uint16_t Rc;
	uint16_t Rm1;
	uint16_t Rm2;
	uint16_t DR;
	uint16_t SM;
}IPC_SELF_DIAG_STATIC_STRU;

typedef struct
{
	uint8_t ResetType;
	uint8_t FuelFillMode;
	uint16_t FuelIgnOn;
	uint16_t FuelSave;
	uint32_t r_afv;
	uint32_t r_afc;
	uint16_t dte_disp;
	uint16_t dte_cal;
	uint8_t dte30sflg;
}IPC_IOC_STAT_STRU;


#if 1//ndef IOC_PLATFORM
#pragma pack()
#endif

typedef struct
{
	uint8_t hour;
	uint8_t min;
	uint8_t sec;
}IPC_APP_TIME_STRU;

typedef struct
{
	IPC_APP_MSG_STRU *msgBuf;
	uint8_t head;
	uint8_t tail;
	uint8_t size;
}MSG_RING_STRU;

typedef struct
{
	uint16_t seqCnt;
	uint8_t timerCnt;
	uint8_t data_len;
	uint8_t data[IPC_EVENT_DATA_BUF_SIZE];
}IPC_APP_EVENT_BUF_STRU;

typedef struct
{
	uint16_t did;
	uint8_t data[30];
}IPC_APP_DIAG_BUF_STRU;

typedef struct
{
	uint16_t did;
	uint8_t data[10];
}IPC_APP_DIAG_L351_BUF_STRU;

//msgType: TYPE_MSG_WARN or TYPE_MSG_NORMAL
extern uint8_t PutToMsgRing(uint8_t msgType, IPC_APP_MSG_STRU *p_warnMsg);
extern void Task_IpcAppInit(void);
extern void PutCanMsgToIPC(uint8_t id, const uint8_t *buf, uint8_t len);
extern void IPC_SetCanMessageTimeoutStat(uint8_t id, uint8_t stat);
extern uint8_t IPC_GetSocReadyOkFlag(void);
extern uint8_t IPC_SendDiagRequest(uint16_t did);
extern IPC_APP_DIAG_BUF_STRU *IPC_GetDiagDataPtr(void);
extern void IPC_SetPredriveCheckStatus(uint8_t status);
/*
extern void IPC_SetHistoryAvgFuel(uint16_t value_one, uint16_t value_two,uint16_t value_three,uint16_t value_four,uint16_t value_five,
										uint16_t value_six, uint16_t BestHistoryAfcValue);
										*/
extern void IPC_PutAlarmMsg(NORMAL_MSG_ID_ENUM id, /* message id,eg  NORMAL_MSG_ID_LowFuel*/
			TELLTALE_ENUM TelltaleStatus, /* Telltale Status, eg OFF, ON, Flash 1HZ, Flash 3Hz */	
			ICON_STAT_ENUM  LcdStatus, 	/* Lcd PopUp Status, eg OFF, ON */
			ACOUSTIC_STAT_ENUM Acoustic);	/* Acoustic Alarm Status, eg OFF, ON */
extern void IPC_SetDebugFlag(uint8_t stat);
extern void IPC_SetCarBodySetInProgress(uint8_t stat);
extern IPC_APP_TIME_INFO_STRU IPC_GetsysTimeInfo(void);
extern void IPC_UpdateFuelState(uint8_t fill_stat, uint16_t fuel_now, uint16_t fuel_save);
extern void IPC_UpdateDTEState(uint32_t r_afc, uint32_t r_afv,uint16_t dte_disp,uint16_t dte_cal); //Yangxl 2019-11-11 17:21:27


#ifdef __cplusplus
}
#endif // __cplusplus

#endif
/*=========================== END OF FILE: Task_IpcApp_Cfg.h ===========================*/
