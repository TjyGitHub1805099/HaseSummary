/*
 * project_n591_data.h
 *
 *  Created on: 2019Äê2ÔÂ18ÈÕ
 *      Author: gaojing
 */

#ifndef TASK_DIGITALAMP_AMP_CONTROL_PROJECT_N591_DATA_H_
#define TASK_DIGITALAMP_AMP_CONTROL_PROJECT_N591_DATA_H_

#include <stdint.h>
#include "tdf853x.h"
#include "audio_engineer_conf.h"

const uint8_t SetDiagPin_cmd_data[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x12,           /* Length   */
	0x80,           /* ModuleId */
	0x10,           /* CmdId    */

	0x03, 			/* NrOfDiagPins */
	0x00, 0x95, 0x00, 0x00, 0x00, /* Diag pin 1 */
	0x01, 0x95, 0x00, 0x00, 0x00, /* Diag pin 2 */
	0x02, 0x95, 0x00, 0x00, 0x00, /* Diag pin 3 */
};

const amp_audio_config_t amp_audio_config = {
	SetAudioConfig_SamplingFrequency_48,
	SetAudioConfig_FrameSize_4_slots,
	SetAudioConfig_SlotSize_32bits,
	SetAudioConfig_TDMFrameSync_Falling,
	SetAudioConfig_BitClockDelay_OneBitDelay
};

const uint8_t amp_audioRouting_config[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x0A,           /* Length   */
	0x80,           /* ModuleId */
	0x28,           /* CmdId    */
	0x00,           /* channel1 AudioSource */
	0x00,           /* channel1 SlotNr */
	0x00,           /* channel2 AudioSource */
	0x01,           /* channel2 SlotNr */
	0x00,           /* channel3 AudioSource */
	0x02,           /* channel3 SlotNr */
	0x00,           /* channel4 AudioSource */
	0x03,           /* channel4 SlotNr */
};

const uint8_t amp_pwmFreq_config[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x05,           /* Length   */
	0x80,           /* ModuleId */
	0x16,           /* CmdId    */
	0x04,
	0x02,
	0x00,
};

const uint8_t amp_modscheme_config[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x0B,           /* Length   */
	0x80,           /* ModuleId */
	0x20,           /* CmdId    */
	0x04,
	0x01,
	0x01,
	0x02,
	0x01,
	0x03,
	0x01,
	0x04,
	0x01,
};

const uint8_t amp_device_config[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x09,           /* Length   */
	0x80,           /* ModuleId */
	0x12,           /* CmdId    */
	0x00,
	0x03,
	0x40,
	0x01,
	0x03,
	0x01,
	0x00,
};

uint8_t amp_channel_config[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x2F,           /* Length   */
	0x80,           /* ModuleId */
	0x24,           /* CmdId    */
	0x04,

	0x01,
	0x32,
	0x01,
	0x00,
	0x02,
	0xA5,
	0xC5,
	0x02,
	0x00,
	0x24,
	0x00,

	0x02,
	0x32,
	0x01,
	0x05,
	0x02,
	0xA5,
	0xC5,
	0x02,
	0x00,
	0x24,
	0x00,

	0x03,
	0x32,
	0x01,
	0x0A,
	0x02,
	0xA5,
	0xC5,
	0x02,
	0x00,
	0x24,
	0x00,

	0x04,
	0x32,
	0x01,
	0x0F,
	0x02,
	0xA5,
	0xC5,
	0x02,
	0x00,
	0x24,
	0x00,
};

uint8_t amp_channel_config_hardware_version_3[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x2F,           /* Length   */
	0x80,           /* ModuleId */
	0x24,           /* CmdId    */
	0x04,

	0x01,
	0x46,
	0x01,
	0x00,
	0x02,
	0xA5,
	0xC5,
	0x02,
	0x00,
	0x24,
	0x00,

	0x02,
	0x46,
	0x01,
	0x04,
	0x02,
	0xA5,
	0xC5,
	0x02,
	0x00,
	0x24,
	0x00,

	0x03,
	0x46,
	0x01,
	0x08,
	0x02,
	0xA5,
	0xC5,
	0x02,
	0x00,
	0x24,
	0x00,

	0x04,
	0x46,
	0x01,
	0x0D,
	0x02,
	0xA5,
	0xC5,
	0x02,
	0x00,
	0x24,
	0x00,
};

const uint8_t amp_dcLoadDetection_config[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x13,           /* Length   */
	0x80,           /* ModuleId */
	0x22,           /* CmdId    */
	0x04,

	0x01,
	0x00,
	0x04,
	0xFA,

	0x02,
	0x00,
	0x04,
	0xFA,

	0x03,
	0x00,
	0x04,
	0xFA,

	0x04,
	0x00,
	0x04,
	0xFA,
};

const uint8_t amp_startUpDiag_config[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x05,           /* Length   */
	0x80,           /* ModuleId */
	0x32,           /* CmdId    */

	0x03,
	0x00,
	0x0F
};

const uint8_t amp_startUpDiag_config_noac[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x05,           /* Length   */
	0x80,           /* ModuleId */
	0x32,           /* CmdId    */

	0x01,
	0x00,
	0x0F
};


const uint8_t amp_lc_config[] = {
	0x02,
	0x00,
	0x31,
	0x80,
	0x2A,
	0x04,

	0x01, //channel1
	0x04,
	0x7C,
	0x70,
	0x08,
	0xF6,
	0x29,
	0x04,
	0x79,
	0xC9,
	0x01,

	0x02, //channel 2
	0x04,
	0x7C,
	0x70,
	0x08,
	0xF6,
	0x29,
	0x04,
	0x79,
	0xC9,
	0x01,

	0x03, //channel 3
	0x04,
	0x7C,
	0x70,
	0x08,
	0xF6,
	0x29,
	0x04,
	0x79,
	0xC9,
	0x01,

	0x04, //channel 4
	0x04,
	0x7C,
	0x70,
	0x08,
	0xF6,
	0x29,
	0x04,
	0x79,
	0xC9,
	0x01,
	0xA4,

	0x1A,  //crc
};

const uint8_t amp_SetFilterDiagnostic_cmd_data[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x04,           /* Length   */
	0x80,           /* ModuleId */
	0x8B,           /* CmdId    */

	0xFF,
	0x1A
};

const uint8_t amp_SetFilterDiagnostic_cmd_stop_data[] = {
	0x02,           /* MsgType  */
	0x00,           /* PacketId */
	0x04,           /* Length   */
	0x80,           /* ModuleId */
	0x8B,           /* CmdId    */

	0x00,
	0x1A
};


#endif /* TASK_DIGITALAMP_AMP_CONTROL_PROJECT_N591_DATA_H_ */
